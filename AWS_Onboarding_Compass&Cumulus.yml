AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates a new IAM role for your AWS Master account with ReadOnlyAccess
  permissions needed for Finops Bundle
Parameters:

  AWSCostAndUsageReportCURBucketName:
    Type: String
    Description: >-
      The name of the Cost and Usage Report (CUR) S3 bucket name to get Cost
      details.     NOTE: THIS IS AN OPTIONAL PARAMETER, SHOULD BE INCLUDED FOR
      AWS MANAGEMENT/LINKED/STANDARD ACCOUNTS FOR WHICH CUR IS ENABLED!!!!Use
      lowercase letters, numbers, periods (.), hyphens (-), and underscores (_)
    AllowedPattern: '^[a-z0-9\.\-\_]*$'
    MinLength: '0'
    MaxLength: '64'
  CompassPermissionInclude:
    Type: String
    Description: Permission to include Wellarchitected Read & Write Access
    Default: Allow
    AllowedValues:
      - Allow
      - Deny
  EnforceMFA:
    Description: Flag to enforce MFA (Multi-Factor Authentication) when Assuming the role.
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
Conditions:
  IncludeMFACondition: !Equals 
    - !Ref EnforceMFA
    - 'true'
  BucketNotEmpty: !Not 
    - !Equals 
      - !Ref AWSCostAndUsageReportCURBucketName
      - ''
  CompassAllow: !Not 
    - !Equals 
      - !Ref CompassPermissionInclude
      - Deny
Resources:
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: "cloudelligent-assessment-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:  [
                        "028811834831",
                        "282762468439"
                      ]
            Condition: !If 
              - IncludeMFACondition
              - StringEquals:
                  'sts:ExternalId': "9ba55e7ffef3c1611a511bbbdadbcdbff662b8d9"
                Bool:
                  'aws:MultiFactorAuthPresent': 'true'
              - StringEquals:
                  'sts:ExternalId': 
                    - "9ba55e7ffef3c1611a511bbbdadbcdbff662b8d9"
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Tags:
        - Key: Purpose
          Value: Stack
  BudgetAndBillingPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: Stack_BudgetAndBillingPolicy
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 'budgets:ViewBudget'
              - 'budgets:DescribeBudgetActionHistories'
              - 'budgets:DescribeBudgetActionsForAccount'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref Role
  SupportAndRIPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: Stack_SupportAndRIPolicy
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 'ce:GetReservationPurchaseRecommendation'
              - 'ce:GetReservationUtilization'
              - 'ce:DescribeNotificationSubscription'
              - 'support:DescribeServices'
              - 'support:DescribeSupportLevel'
              - 'support:DescribeTrustedAdvisorCheckResult'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref Role
  AWSCURAccessPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: BucketNotEmpty
    Properties:
      PolicyName: Stack_AWSCURAccessPolicy
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AWSCostAndUsageReportCURBucketName
                - /*
      Roles:
        - !Ref Role
  ComputeOptimizerPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: Stack_ComputeOptimizerPolicy
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 'compute-optimizer:DescribeRecommendationExportJobs'
              - 'compute-optimizer:GetAutoScalingGroupRecommendations'
              - 'compute-optimizer:GetEBSVolumeRecommendations'
              - 'compute-optimizer:GetEC2InstanceRecommendations'
              - 'compute-optimizer:GetEC2RecommendationProjectedMetrics'
              - 'compute-optimizer:GetECSServiceRecommendationProjectedMetrics'
              - 'compute-optimizer:GetECSServiceRecommendations'
              - 'compute-optimizer:GetEffectiveRecommendationPreferences'
              - 'compute-optimizer:GetEnrollmentStatus'
              - 'compute-optimizer:GetLambdaFunctionRecommendations'
              - 'compute-optimizer:GetRecommendationPreferences'
              - 'compute-optimizer:GetRecommendationSummaries'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref Role
  CompassWritePermission:
    Type: 'AWS::IAM::Policy'
    Condition: CompassAllow
    Properties:
      PolicyName: Stack_CompassWritePermission
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 'wellarchitected:*'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref Role
    
  

  InventoryFinopsReadPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: Stack_InventoryFinopsReadPolicy
      PolicyDocument:
        Statement:
          - Sid: Auth
            Action:
              - 'access-analyzer:List*'
              - 'acm:DescribeCertificate'
              - 'acm:GetCertificate'
              - 'acm:ListCertificates'
              - 'acm:ListTagsForCertificate'
              - 'apigateway:GET'
              - 'application-autoscaling:DescribeScheduledActions'
              - 'autoscaling:Describe*'
              - 'batch:Describe*'
              - 'clouddirectory:DescribeDirectories'
              - 'clouddirectory:GetDirectory'
              - 'clouddirectory:ListDirectories'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:GetStackPolicy'
              - 'cloudformation:GetTemplate'
              - 'cloudformation:ListStackResources'
              - 'cloudformation:ListStacks'
              - 'cloudfront:Get*'
              - 'cloudfront:List*'
              - 'cloudhsm:Describe*'
              - 'cloudhsm:List*'
              - 'cloudtrail:DescribeTrails'
              - 'cloudtrail:Get*'
              - 'cloudtrail:ListTrails'
              - 'cloudwatch:Describe*'
              - 'cloudwatch:GetDashboard'
              - 'cloudwatch:GetMetricStatistics'
              - 'cloudwatch:ListDashboards'
              - 'cloudwatch:ListMetrics'
              - 'cloudwatch:GetMetricData'
              - 'codeartifact:DescribeDomain'
              - 'codepipeline:List'
              - 'cognito-identity:Describe*'
              - 'cognito-identity:Get*'
              - 'cognito-user:List*'
              - 'cognito-user:Describe*'
              - 'datapipeline:DescribePipelines'
              - 'datapipeline:GetPipelineDefinition'
              - 'datapipeline:ListPipelines'
              - 'directconnect:DescribeConnections'
              - 'directconnect:DescribeLocations'
              - 'directconnect:DescribeVirtualGateways'
              - 'directconnect:DescribeVirtualInterfaces'
              - 'dms:Describe*'
              - 'dynamodb:Describe*'
              - 'dynamodb:ListTables'
              - 'dynamodb:ListTagsOfResource'
              - 'ec2:Describe*'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchImportUpstreamImage'
              - 'ecr:DescribeRepositories'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:GetLifecyclePolicyPreview'
              - 'ecr-public:GetRepositoryCatalogData'
              - 'ecs:Describe*'
              - 'ecs:List*'
              - 'eks:Describe*'
              - 'eks:List*'
              - 'elasticache:Describe*'
              - 'elasticbeanstalk:Describe*'
              - 'elasticfilesystem:Describe*'
              - 'elasticloadbalancing:Describe*'
              - 'elasticmapreduce:Describe*'
              - 'elasticmapreduce:List*'
              - 'es:Describe*'
              - 'es:ListDomainNames'
              - 'glacier:Describe*'
              - 'glacier:List*'
              - 'glue:List*'
              - 'glue:Get*'
              - 'guardduty:GetDetector'
              - 'guardduty:ListDetectors'
              - 'iam:GetGroup'
              - 'iam:GetGroupPolicy'
              - 'iam:GetPolicy'
              - 'iam:GetRole'
              - 'iam:GetRolePolicy'
              - 'iam:GetUser'
              - 'iam:GetUserPolicy'
              - 'iam:List*'
              - 'iam:SimulatePrincipalPolicy'
              - 'inspector:Describe*'
              - 'inspector:List*'
              - 'iot:DescribeThing'
              - 'iot:ListThings'
              - 'kafka:Describe*'
              - 'kafka:List*'
              - 'kinesis:DescribeStream'
              - 'kinesis:GetShardIterator'
              - 'kinesis:ListStreams'
              - 'kinesis:ListTagsForStream'
              - 'kms:Describe*'
              - 'kms:Get*'
              - 'kms:List*'
              - 'lambda:Get*'
              - 'lambda:List*'
              - 'lightsail:Get*'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:GetLogEvents'
              - 'mgh:DescribeApplicationState'
              - 'mgh:ListApplicationStates'
              - 'mq:DescribeBroker'
              - 'mq:ListBrokers'
              - 'opsworks:DescribeStacks'
              - 'opsworks:DescribeStackSummary'
              - 'opsworks:DescribeUserProfiles'
              - 'organizations:Describe*'
              - 'organizations:List*'
              - 'qldb:DescribeLedger'
              - 'quicksight:Describe*'
              - 'quicksight:List*'
              - 'rds:Describe*'
              - 'rds:List*'
              - 'redshift:Describe*'
              - 'route53:GetTrafficPolicy'
              - 'route53:GetTrafficPolicyInstance'
              - 'route53:List*'
              - 's3:GetAccountPublicAccessBlock'
              - 's3:GetBucketACL'
              - 's3:GetBucketLocation'
              - 's3:GetBucketPolicy'
              - 's3:GetBucketPublicAccessBlock'
              - 's3:GetBucketTagging'
              - 's3:GetLifecycleConfiguration'
              - 's3:GetNotificationConfiguration'
              - 's3:ListAllMyBuckets'
              - 's3:ListBucket'
              - 'sdb:DomainMetadata'
              - 'sdb:ListDomains'
              - 'secretsmanager:List*'
              - 'secretsmanager:Describe*'
              - 'servicecatalog:Describe*'
              - 'servicecatalog:List*'
              - 'sheild:DescribeProtection'
              - 'sheild:ListProtections'
              - 'sns:GetSnsTopic'
              - 'sns:GetSubscriptionAttributes'
              - 'sns:GetTopicAttributes'
              - 'sns:ListSubscriptionsByTopic'
              - 'sns:ListTopics'
              - 'sqs:GetQueueAttributes'
              - 'sqs:ListQueues'
              - 'ssm:Describe*'
              - 'ssm:Get*'
              - 'ssm:List*'
              - 'storagegateway:Describe*'
              - 'storagegateway:List*'
              - 'swf:List*'
              - 'waf:Get*'
              - 'waf:List*'
              - 'waf-regional:Get*'
              - 'waf-regional:List*'
              - 'wafv2:Get*'
              - 'wafv2:List*'
              - 'workmail:Describe*'
              - 'workmail:List*'
              - 'workspaces:Describe*'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref Role
Outputs:
  RoleARN:
    Description: ARN of the IAM Role.
    Value: !GetAtt 
      - Role
      - Arn
  MFAEnabled:
    Description: Flag to identify MFA enforced for the role or not.
    Value: !Ref EnforceMFA
  RoleName:
    Description: Name of the IAM Role.
    Value: !Ref Role
  ExternalId:
    Description: External id for building trust.
    Value: "9ba55e7ffef3c1611a511bbbdadbcdbff662b8d9"
